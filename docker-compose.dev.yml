version: "3.7"

services:
  ts-node-docker:
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    restart: always
    volumes:
      - ./api/src:/usr/src/app/api/src
    container_name: ts-node-docker
    ports:
      - 8080:3000
    depends_on: 
      - postgres

  mongo_chat:
    container_name: mongo_chat
    restart: always
    image: mongo:latest
    volumes:
      - ./chat/mongo:/data/db
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password12345678

  chat-server:
    build:
      context: ./chat/server
      dockerfile: Dockerfile.dev
    volumes:
      - ./chat/server/src:/usr/src/app/chat/server/src/
      - /usr/src/app/chat/server/node_modules
    container_name: chat-server
    ports:
      - 8082:3000
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password12345678
      - MONGODB_URI=mongodb://mongo_chat:27017/
    depends_on:
      - mongo_chat

  chat-client:
    build:
      context: ./chat/client
      dockerfile: Dockerfile.dev
    volumes:
      - ./chat/client/src:/usr/src/app/chat/client/src/
      - /usr/src/app/chat/client/node_modules

    container_name: chat-client
    ports:
      - 5500:5500
    depends_on:
      - chat-server

  postgres:
    container_name: postgres
    restart: always
    build:
      context: ./postgres
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./postgres/data:/home/postgres/data
    ports:
      - "5432:5432"

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - 8081:8080 
